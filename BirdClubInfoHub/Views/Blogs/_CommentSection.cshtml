@model BlogDTO

@{
    var userSessionId = Context.Session.GetInt32("USER_ID") ?? 0;
}

<div class="comments-container">
    <h2 class="comments-container-title">Comments</h2>

    @foreach (var comment in Model.Comments)
    {
        <div class="comment-container">
            <hr />
            <div class="comment-body">
                <div class="comment-author-ava-container">
                    <img class="comment-author-ava" src="@Url.Action("GetImageFromBytes", "Profile", new { id = comment.User.Id })" alt="avatar" />
                </div>

                <div class="comment-content-container" data-comment-id="@comment.Id">
                    <div class="comment-info-container">
                        <p class="comment-author">@comment.User.Name</p>

                        @{
                            if (comment.ModifiedDate != new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                            {
                                <p class="comment-date">Edited @comment.ModifiedDate</p>
                            }
                            else
                            {
                                <p class="comment-date">@comment.CreatedDate</p>
                            }
                        }
                    </div>

                    <div class="comment-content" data-id="@comment.Id">@comment.Contents</div>

                    @{
                        var updateComment = new Comment();
                        updateComment.Id = comment.Id;
                        updateComment.BlogId = Model.Id;
                        updateComment.UserId = comment.User.Id;
                        updateComment.Contents = comment.Contents;
                    }

                    @if (comment.User.Id == userSessionId)
                    {
                        <div class="update-comment-container">
                            <button
                                type="button"
                                class="edit-button"
                                onclick="initEdit(@comment.Id)">Edit</button>

                            <button
                                type="button"
                                class="delete-button"
                                onclick="initDelete(@comment.Id)">Delete</button>
                        </div>
                    }
                </div>

                @await Html.PartialAsync("_EditComment", updateComment)
                @await Html.PartialAsync("_DeleteComment", updateComment)
            </div>
        </div>
    }

    @{
        var addComment = new Comment();
        addComment.BlogId = Model.Id;
        addComment.UserId = Context.Session.GetInt32("USER_ID") ?? 0;
    }
    @await Html.PartialAsync("_AddComment", addComment);
</div>

@* @await Html.PartialAsync("_EditComment", new Comment())
@await Html.PartialAsync("_DeleteComment", new Comment()) *@

@* <script>
    var editModal = document.getElementById('editModal');
    // Send selected comment data to the edit modal.
    editModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var commentId = button.getAttribute('data-comment-id');
        editModal.querySelector('.modal-body #Id').value = commentId;
    });

    var deleteModal = document.getElementById('deleteModal');
    // Send selected comment data to the delete modal.
    deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var commentId = button.getAttribute('data-comment-id');
        deleteModal.querySelector('.modal-body #Id').value = commentId;
    });
</script> *@